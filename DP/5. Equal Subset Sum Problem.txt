// 0/1 knapSack_TD DP

#include<iostream>
#include<vector>
#include<cstring>
using namespace std;



int knapSack_essp(vector<int> arr, int sum, int array_length)
{   
    if(sum%2!=0)
        return 0;
    sum=sum/2;
    int t[array_length+1][sum+1];
    for(int i=0; i<=array_length; i++)
    {
        for(int j=0; j<=sum; j++)
        {
            if(i==0){
                t[i][j]=0;
                }
            else if(j==0)
            {
                t[i][j]=1;
            }
            else if(arr[i-1]<=j)
            {
                t[i][j]=(t[i-1][j-arr[i-1]] || t[i-1][j]);
                }
            else{
                t[i][j]=t[i-1][j];
                }
        }
    }
    //for(int i=0;i<=array_length;i++){
    //    cout<<'\n';
    //    for(int j=0;j<=sum;j++){
    //        cout<<t[i][j]<<' ';
    //    }
    //}
   return t[array_length][sum];  
}    
    
 
//driver 

int main()
{
    //Initializing array
    vector<int> arr;//0-> Weight 1-> Value
    arr.push_back(1);//Pushing values into array.
    arr.push_back(1);
    arr.push_back(3);
    arr.push_back(4);
    arr.push_back(7);
    int sum = 0;//Sum needed
    for(int i=0;i<arr.size();i++)
        sum+=arr[i];
    int array_length = arr.size();
    cout<<"size is"<<array_length<<'\n';
    cout<<knapSack_essp(arr,sum,array_length);
    return 0;
}